// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int           @id @default(autoincrement()) // auto-inc
  name           String
  email          String        @unique // should be unique
  phone          String?
  password       String
  avatar         String?
  designation    String?
  dateOfBirth    DateTime?
  institute      String?
  degree         String?
  starting       DateTime?
  ending         DateTime?
  role           Role
  campus         Campus
  department     Department
  observations   Observations? @relation(fields: [observationIds], references: [id])
  observationIds Int?
  obsRequests    ObsRequests?  @relation(fields: [obsRequestIds], references: [id])
  obsRequestIds  Int?
  courses        Courses?      @relation(fields: [courseIds], references: [id])
  courseIds      Int?
  feedbacks      FeedBacks?    @relation(fields: [feedbackIds], references: [id])
  feedbackIds    Int?
  messages       Messages?     @relation(fields: [messageIds], references: [id])
  messageIds     Int?

  @@index([email]) // sorting
}

model ObsRequests {
  id           Int     @id @default(autoincrement()) // auto-inc
  message      String
  teachingPlan String
  course       Courses @relation(fields: [courseId], references: [id])
  courseId     Int
  User         User[]
}

model Observations {
  id                  Int       @id @default(autoincrement()) // auto-inc
  timeSlot            DateTime?
  course              Courses?  @relation(fields: [courseId], references: [id])
  courseId            Int?
  observationStatus   Boolean   @default(false)
  observationProgress Int       @default(0)
  meetings            Meetings? @relation(fields: [meetingIds], references: [id])
  meetingIds          Int?
  User                User[]
}

model Courses {
  id           Int            @id @default(autoincrement()) // auto-inc
  courseName   String
  department   Department
  observations Observations[]
  ObsRequests  ObsRequests[]
  User         User[]
}

model Meetings {
  id           Int            @id @default(autoincrement()) // auto-inc
  meetingName  String         @default("Pre-Obs") //default Pre Observation
  meetingScore Int            @default(0)
  rubric       Bytes? // image file bytes
  profDevPlan  Bytes?
  Observations Observations[]
  feedbacks    FeedBacks?     @relation(fields: [feedbackIds], references: [id])
  feedbackIds  Int?
}

model FeedBacks {
  id       Int        @id @default(autoincrement()) // auto-inc
  User     User[]
  Meetings Meetings[]
}

model Messages {
  id   Int    @id @default(autoincrement()) // auto-inc
  User User[]
}

enum Role {
  Admin
  Campus_Director
  Head_of_Department
  Faculty
  Observer
}

enum Department {
  Fest
  Aifd
  Media
  Business
}

enum Campus {
  Main_Campus
  Gulshan_Campus
  North_Campus
  Airport_Campus
  Bahria_Campus
  Islamabad_Campus
}
